{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","getFormatedTime","toUTCString","slice","this","window","setInterval","setState","console","info","prevProps","name","props","debug","clearInterval","className","Component","App","hasClock","clockName","nameTimerId","getRandomName","value","now","toString","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,EAwBEC,gBAAkB,SAACH,GAAD,OAAgBA,EAAKI,cAAcC,OAAO,IAAK,IAxBnE,uDAOE,WAAqB,IAAD,OAClBC,KAAKJ,QAAUK,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAET,KAAM,IAAIC,OAC1BS,QAAQC,KAAK,EAAKR,gBAAgB,EAAKJ,MAAMC,SAC5C,OAXP,gCAcE,SAAmBY,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAChCH,QAAQK,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDP,KAAKQ,MAAMD,SAhBpE,kCAoBE,WACEG,cAAcV,KAAKJ,WArBvB,oBA0BE,WACE,IAAQF,EAASM,KAAKP,MAAdC,KAER,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,KAAKQ,MAAMD,OAGb,YAED,sBAAMI,UAAU,cAAhB,SACGX,KAAKH,gBAAgBH,YAtChC,GAA2BkB,aCFdC,EAAb,4MACEpB,MAAQ,CACNqB,UAAU,EACVC,UAAW,WAHf,EAMEC,YAAc,EANhB,EA2BEC,cAAgB,WACd,IAAMC,EAAQvB,KAAKwB,MAAMC,WAAWrB,OAAO,GAE3C,MAAM,SAAN,OAAgBmB,IA9BpB,uDAQE,WAAqB,IAAD,OAClBG,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKrB,SAAS,CAAEW,UAAU,OAG5BO,SAASC,iBAAiB,SAAS,WACjC,EAAKnB,SAAS,CAAEW,UAAU,OAG5Bd,KAAKgB,YAAcf,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAEY,UAAW,EAAKE,oBAC/B,QApBP,kCAuBE,WACEP,cAAcV,KAAKgB,eAxBvB,oBAiCE,WACE,MAAgChB,KAAKP,MAA7BqB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CAECG,GAAY,cAAC,EAAD,CAAOP,KAAMQ,WAxClC,GAAyBH,aCNzBa,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.a7c444d4.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype State = {\n  date: Date;\n};\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n      console.info(this.getFormatedTime(this.state.date));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  getFormatedTime = (date: Date) => date.toUTCString().slice(-12, -4);\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.getFormatedTime(date)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  nameTimerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.nameTimerId = window.setInterval(() => {\n      this.setState({ clockName: this.getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.nameTimerId);\n  }\n\n  getRandomName = () => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}